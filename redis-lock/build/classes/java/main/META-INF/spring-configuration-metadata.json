{
  "groups": [
    {
      "name": "conductor.redis-lock",
      "type": "com.netflix.conductor.redislock.config.RedisLockProperties",
      "sourceType": "com.netflix.conductor.redislock.config.RedisLockProperties"
    }
  ],
  "properties": [
    {
      "name": "conductor.redis-lock.cluster-primary-connection-min-idle-size",
      "type": "java.lang.Integer",
      "description": "If using Cluster Mode, you can use this to set num of min idle connections for replica",
      "sourceType": "com.netflix.conductor.redislock.config.RedisLockProperties",
      "defaultValue": 24
    },
    {
      "name": "conductor.redis-lock.cluster-primary-connection-pool-size",
      "type": "java.lang.Integer",
      "description": "If using Cluster Mode, you can use this to set num of min idle connections for replica",
      "sourceType": "com.netflix.conductor.redislock.config.RedisLockProperties",
      "defaultValue": 64
    },
    {
      "name": "conductor.redis-lock.cluster-replica-connection-min-idle-size",
      "type": "java.lang.Integer",
      "description": "If using Cluster Mode, you can use this to set num of min idle connections for replica",
      "sourceType": "com.netflix.conductor.redislock.config.RedisLockProperties",
      "defaultValue": 24
    },
    {
      "name": "conductor.redis-lock.cluster-replica-connection-pool-size",
      "type": "java.lang.Integer",
      "description": "If using Cluster Mode, you can use this to set num of min idle connections for replica",
      "sourceType": "com.netflix.conductor.redislock.config.RedisLockProperties",
      "defaultValue": 64
    },
    {
      "name": "conductor.redis-lock.ignore-locking-exceptions",
      "type": "java.lang.Boolean",
      "description": "Enable to otionally continue without a lock to not block executions until the locking service becomes available",
      "sourceType": "com.netflix.conductor.redislock.config.RedisLockProperties",
      "defaultValue": false
    },
    {
      "name": "conductor.redis-lock.namespace",
      "type": "java.lang.String",
      "description": "The namespace to use to prepend keys used for locking in redis",
      "sourceType": "com.netflix.conductor.redislock.config.RedisLockProperties",
      "defaultValue": ""
    },
    {
      "name": "conductor.redis-lock.num-netty-threads",
      "type": "java.lang.Integer",
      "description": "The number of natty threads to use",
      "sourceType": "com.netflix.conductor.redislock.config.RedisLockProperties"
    },
    {
      "name": "conductor.redis-lock.server-address",
      "type": "java.lang.String",
      "description": "The address of the redis server following format -- host:port",
      "sourceType": "com.netflix.conductor.redislock.config.RedisLockProperties",
      "defaultValue": "redis:\/\/127.0.0.1:6379"
    },
    {
      "name": "conductor.redis-lock.server-master-name",
      "type": "java.lang.String",
      "description": "The master server name used by Redis Sentinel servers and master change monitoring task",
      "sourceType": "com.netflix.conductor.redislock.config.RedisLockProperties",
      "defaultValue": "master"
    },
    {
      "name": "conductor.redis-lock.server-password",
      "type": "java.lang.String",
      "description": "The password for redis authentication",
      "sourceType": "com.netflix.conductor.redislock.config.RedisLockProperties"
    },
    {
      "name": "conductor.redis-lock.server-type",
      "type": "com.netflix.conductor.redislock.config.RedisLockProperties$REDIS_SERVER_TYPE",
      "description": "The redis server configuration to be used.",
      "sourceType": "com.netflix.conductor.redislock.config.RedisLockProperties",
      "defaultValue": "SINGLE"
    }
  ],
  "hints": [
    {
      "name": "conductor.redis-lock.server-type",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "java.lang.Enum"
          }
        }
      ]
    },
    {
      "name": "conductor.workflow-execution-lock.type",
      "values": [
        {
          "value": "redis",
          "description": "Use the redis-lock implementation as the lock provider."
        }
      ]
    }
  ]
}