{
  "groups": [
    {
      "name": "conductor.app",
      "type": "com.netflix.conductor.core.config.ConductorProperties",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties"
    }
  ],
  "properties": [
    {
      "name": "conductor.app.active-worker-last-poll-timeout",
      "type": "java.time.Duration",
      "description": "The time (in seconds) that is used to consider if a worker is actively polling for a task.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "10s"
    },
    {
      "name": "conductor.app.all",
      "type": "java.util.Map<java.lang.String,java.lang.Object>",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties"
    },
    {
      "name": "conductor.app.app-id",
      "type": "java.lang.String",
      "description": "The id with the app has been registered.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "conductor"
    },
    {
      "name": "conductor.app.async-indexing-enabled",
      "type": "java.lang.Boolean",
      "description": "Used to enable\/disable asynchronous indexing to elasticsearch.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": false
    },
    {
      "name": "conductor.app.async-update-delay",
      "type": "java.time.Duration",
      "description": "The delay with which short-running workflows will be updated in the elasticsearch index when async indexing is enabled.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "60s"
    },
    {
      "name": "conductor.app.async-update-short-running-workflow-duration",
      "type": "java.time.Duration",
      "description": "The duration of workflow execution which qualifies a workflow as a short-running workflow when async indexing to elasticsearch is enabled.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "30s"
    },
    {
      "name": "conductor.app.event-execution-indexing-enabled",
      "type": "java.lang.Boolean",
      "description": "Used to enable\/disable the indexing of event execution results.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": true
    },
    {
      "name": "conductor.app.event-message-indexing-enabled",
      "type": "java.lang.Boolean",
      "description": "Used to enable\/disable the indexing of messages within event payloads.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": true
    },
    {
      "name": "conductor.app.event-processor-thread-count",
      "type": "java.lang.Integer",
      "description": "The number of threads to configure the threadpool in the event processor.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": 2
    },
    {
      "name": "conductor.app.event-queue-long-poll-timeout",
      "type": "java.time.Duration",
      "description": "The timeout (in milliseconds) for the poll operation on the default event queue.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "1000ms"
    },
    {
      "name": "conductor.app.event-queue-poll-count",
      "type": "java.lang.Integer",
      "description": "The number of messages to be polled from a default event queue in a single operation.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": 10
    },
    {
      "name": "conductor.app.event-queue-poll-interval",
      "type": "java.time.Duration",
      "description": "The time interval (in milliseconds) at which the default event queues will be polled.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "100ms"
    },
    {
      "name": "conductor.app.event-queue-scheduler-poll-thread-count",
      "type": "java.lang.Integer",
      "description": "The number of threads to be usde in Scheduler used for polling events from multiple event queues. By default, a thread count equal to the number of CPU cores is chosen.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": 0
    },
    {
      "name": "conductor.app.executor-service-max-thread-count",
      "type": "java.lang.Integer",
      "description": "The maximum number of threads to be allocated to the executor service threadpool.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": 50
    },
    {
      "name": "conductor.app.isolated-system-task-enabled",
      "type": "java.lang.Boolean",
      "description": "Used to enable\/disable use of isolation groups for system task workers."
    },
    {
      "name": "conductor.app.isolated-system-task-worker-thread-count",
      "type": "java.lang.Integer",
      "description": "The number of threads to be used within the threadpool for system task workers in each isolation group.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": 1
    },
    {
      "name": "conductor.app.isolatedSystemTaskPollIntervalSecs",
      "type": "java.lang.Integer",
      "description": "The time interval (in seconds) at which new isolated task queues will be polled and added to the system task queue repository."
    },
    {
      "name": "conductor.app.lock-lease-time",
      "type": "java.time.Duration",
      "description": "The time (in milliseconds) for which the lock is leased for.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "60000ms"
    },
    {
      "name": "conductor.app.lock-time-to-try",
      "type": "java.time.Duration",
      "description": "The time (in milliseconds) for which the thread will block in an attempt to acquire the lock.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "500ms"
    },
    {
      "name": "conductor.app.max-task-input-payload-size-threshold",
      "type": "org.springframework.util.unit.DataSize",
      "description": "The maximum threshold of the task input payload size in KB beyond which the task input will be rejected and the task will be marked as FAILED_WITH_TERMINAL_ERROR.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "10240KB"
    },
    {
      "name": "conductor.app.max-task-output-payload-size-threshold",
      "type": "org.springframework.util.unit.DataSize",
      "description": "The maximum threshold of the task output payload size in KB beyond which the task input will be rejected and the task will be marked as FAILED_WITH_TERMINAL_ERROR.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "10240KB"
    },
    {
      "name": "conductor.app.max-workflow-input-payload-size-threshold",
      "type": "org.springframework.util.unit.DataSize",
      "description": "The maximum threshold of the workflow input payload size in KB beyond which input will be rejected and the workflow will be marked as FAILED.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "10240KB"
    },
    {
      "name": "conductor.app.max-workflow-output-payload-size-threshold",
      "type": "org.springframework.util.unit.DataSize",
      "description": "The maximum threshold of the workflow output payload size in KB beyond which output will be rejected and the workflow will be marked as FAILED.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "10240KB"
    },
    {
      "name": "conductor.app.max-workflow-variables-payload-size-threshold",
      "type": "org.springframework.util.unit.DataSize",
      "description": "The maximum threshold of the workflow variables payload size in KB beyond which the task changes will be rejected and the task will be marked as FAILED_WITH_TERMINAL_ERROR.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "256KB"
    },
    {
      "name": "conductor.app.owner-email-mandatory",
      "type": "java.lang.Boolean",
      "description": "Used to control the validation for owner email field as mandatory within workflow and task definitions.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": true
    },
    {
      "name": "conductor.app.stack",
      "type": "java.lang.String",
      "description": "Name of the stack within which the app is running. e.g. devint, testintg, staging, prod etc.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "test"
    },
    {
      "name": "conductor.app.sweeper-thread-count",
      "type": "java.lang.Integer",
      "description": "The number of threads to use to do background sweep on active workflows.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": 0
    },
    {
      "name": "conductor.app.sweeper-workflow-poll-timeout",
      "type": "java.time.Duration",
      "description": "The timeout (in milliseconds) for the polling of workflows to be swept.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "2000ms"
    },
    {
      "name": "conductor.app.system-task-max-poll-count",
      "type": "java.lang.Integer",
      "description": "The max number of the threads to be polled within the threadpool for system task workers.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties"
    },
    {
      "name": "conductor.app.system-task-worker-callback-duration",
      "type": "java.time.Duration",
      "description": "The interval (in seconds) after which a system task will be checked by the system task worker for completion.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "30s"
    },
    {
      "name": "conductor.app.system-task-worker-execution-namespace",
      "type": "java.lang.String",
      "description": "The namespace for the system task workers to provide instance level isolation.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": ""
    },
    {
      "name": "conductor.app.system-task-worker-poll-interval",
      "type": "java.time.Duration",
      "description": "The interval (in milliseconds) at which system task queues will be polled by the system task workers.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "50ms"
    },
    {
      "name": "conductor.app.system-task-worker-thread-count",
      "type": "java.lang.Integer",
      "description": "The number of threads to be used within the threadpool for system task workers.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": 0
    },
    {
      "name": "conductor.app.task-exec-log-indexing-enabled",
      "type": "java.lang.Boolean",
      "description": "Used to enable\/disable the indexing of task execution logs.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": true
    },
    {
      "name": "conductor.app.task-exec-log-size-limit",
      "type": "java.lang.Integer",
      "description": "Used to limit the size of task execution logs.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": 10
    },
    {
      "name": "conductor.app.task-execution-postpone-duration",
      "type": "java.time.Duration",
      "description": "The time (in seconds) for which a task execution will be postponed if being rate limited or concurrent execution limited.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "60s"
    },
    {
      "name": "conductor.app.task-indexing-enabled",
      "type": "java.lang.Boolean",
      "description": "Used to enable\/disable the indexing of tasks.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": true
    },
    {
      "name": "conductor.app.task-input-payload-size-threshold",
      "type": "org.springframework.util.unit.DataSize",
      "description": "The threshold of the task input payload size in KB beyond which the payload will be stored in {@link com.netflix.conductor.common.utils.ExternalPayloadStorage}.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "3072KB"
    },
    {
      "name": "conductor.app.task-output-payload-size-threshold",
      "type": "org.springframework.util.unit.DataSize",
      "description": "The threshold of the task output payload size in KB beyond which the payload will be stored in {@link com.netflix.conductor.common.utils.ExternalPayloadStorage}.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "3072KB"
    },
    {
      "name": "conductor.app.taskPendingTimeThresholdMins",
      "type": "java.lang.Long",
      "description": "The time threshold (in minutes) beyond which a warning log will be emitted for a task if it stays in the same state for this duration."
    },
    {
      "name": "conductor.app.workflow-execution-lock-enabled",
      "type": "java.lang.Boolean",
      "description": "Used to enable\/disable the workflow execution lock.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": false
    },
    {
      "name": "conductor.app.workflow-input-payload-size-threshold",
      "type": "org.springframework.util.unit.DataSize",
      "description": "The threshold of the workflow input payload size in KB beyond which the payload will be stored in {@link com.netflix.conductor.common.utils.ExternalPayloadStorage}.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "5120KB"
    },
    {
      "name": "conductor.app.workflow-offset-timeout",
      "type": "java.time.Duration",
      "description": "The timeout duration to set when a workflow is pushed to the decider queue.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "30s"
    },
    {
      "name": "conductor.app.workflow-output-payload-size-threshold",
      "type": "org.springframework.util.unit.DataSize",
      "description": "The threshold of the workflow output payload size in KB beyond which the payload will be stored in {@link com.netflix.conductor.common.utils.ExternalPayloadStorage}.",
      "sourceType": "com.netflix.conductor.core.config.ConductorProperties",
      "defaultValue": "5120KB"
    },
    {
      "name": "conductor.default-event-processor.enabled",
      "type": "java.lang.Boolean",
      "description": "Enables the default event processor for handling events.",
      "sourceType": "com.netflix.conductor.core.events.DefaultEventProcessor",
      "defaultValue": "true"
    },
    {
      "name": "conductor.default-event-queue-processor.enabled",
      "type": "java.lang.Boolean",
      "description": "Enables the processor for the default event queues that conductor is configured to listen on.",
      "sourceType": "com.netflix.conductor.core.events.queue.DefaultEventQueueProcessor",
      "defaultValue": "true"
    },
    {
      "name": "conductor.event-queues.default.enabled",
      "type": "java.lang.Boolean",
      "description": "Enables the use of the underlying queue implementation to provide queues for consuming events.",
      "sourceType": "com.netflix.conductor.core.events.queue.ConductorEventQueueProvider",
      "defaultValue": "true"
    },
    {
      "name": "conductor.external-payload-storage.type",
      "type": "java.lang.String",
      "description": "The type of payload storage to be used for externalizing large payloads."
    },
    {
      "name": "conductor.sweep-frequency.millis",
      "type": "java.lang.Integer",
      "description": "The frequency in milliseconds, at which the workflow sweeper should evaluate active workflows.",
      "sourceType": "com.netflix.conductor.core.reconciliation.WorkflowReconciler",
      "defaultValue": 500
    },
    {
      "name": "conductor.system-task-workers.enabled",
      "type": "java.lang.Boolean",
      "description": "Configuration to enable SystemTaskWorkerCoordinator, that polls and executes the asynchronous system tasks.",
      "sourceType": "com.netflix.conductor.core.execution.tasks.SystemTaskWorkerCoordinator",
      "defaultValue": true
    },
    {
      "name": "conductor.task-status-listener.type",
      "type": "java.lang.String",
      "description": "The implementation of the task status listener to be used."
    },
    {
      "name": "conductor.workflow-execution-lock.type",
      "type": "java.lang.String",
      "description": "The implementation of the workflow execution lock to be used.",
      "defaultValue": "noop_lock"
    },
    {
      "name": "conductor.workflow-monitor.enabled",
      "type": "java.lang.Boolean",
      "description": "Enables the workflow monitor that publishes workflow and task metrics.",
      "sourceType": "com.netflix.conductor.metrics.WorkflowMonitor",
      "defaultValue": "true"
    },
    {
      "name": "conductor.workflow-monitor.metadata-refresh-interval",
      "type": "java.lang.Integer",
      "description": "The interval (counter) after which the workflow monitor refreshes the metadata definitions from the datastore.",
      "defaultValue": "10"
    },
    {
      "name": "conductor.workflow-monitor.stats.delay",
      "type": "java.lang.Integer",
      "description": "The delay (in milliseconds) at which the workflow monitor publishes workflow and task metrics."
    },
    {
      "name": "conductor.workflow-monitor.stats.initial-delay",
      "type": "java.lang.Integer",
      "description": "The initial delay (in milliseconds) at which the workflow monitor publishes workflow and task metrics."
    },
    {
      "name": "conductor.workflow-reconciler.enabled",
      "type": "java.lang.Boolean",
      "description": "Enables the workflow reconciliation mechanism.",
      "sourceType": "com.netflix.conductor.core.reconciliation.WorkflowReconciler",
      "defaultValue": true
    },
    {
      "name": "conductor.workflow-repair-service.enabled",
      "type": "java.lang.Boolean",
      "description": "Configuration to enable WorkflowRepairService, that tries to keep ExecutionDAO and QueueDAO in sync, based on the task or workflow state. This is disabled by default; To enable, the Queueing layer must implement QueueDAO.containsMessage method.",
      "sourceType": "com.netflix.conductor.core.reconciliation.WorkflowRepairService"
    },
    {
      "name": "conductor.workflow-status-listener.type",
      "type": "java.lang.String",
      "description": "The implementation of the workflow status listener to be used."
    }
  ],
  "hints": [
    {
      "name": "conductor.external-payload-storage.type",
      "values": [
        {
          "value": "dummy",
          "description": "Use the dummy no-op implementation as the external payload storage."
        }
      ]
    },
    {
      "name": "conductor.workflow-execution-lock.type",
      "values": [
        {
          "value": "noop_lock",
          "description": "Use the no-op implementation as the lock provider."
        },
        {
          "value": "local_only",
          "description": "Use the local in-memory cache based implementation as the lock provider."
        }
      ]
    },
    {
      "name": "conductor.workflow-status-listener.type",
      "values": [
        {
          "value": "stub",
          "description": "Use the no-op implementation of the workflow status listener."
        }
      ]
    }
  ]
}